function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "untitled"};
	this.sidHashMap["untitled"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "untitled:7"};
	this.sidHashMap["untitled:7"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "untitled:3"};
	this.sidHashMap["untitled:3"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/Demux"] = {sid: "untitled:8"};
	this.sidHashMap["untitled:8"] = {rtwname: "<Root>/Demux"};
	this.rtwnameHashMap["<Root>/Display"] = {sid: "untitled:5"};
	this.sidHashMap["untitled:5"] = {rtwname: "<Root>/Display"};
	this.rtwnameHashMap["<Root>/Display1"] = {sid: "untitled:13"};
	this.sidHashMap["untitled:13"] = {rtwname: "<Root>/Display1"};
	this.rtwnameHashMap["<Root>/Divide"] = {sid: "untitled:9"};
	this.sidHashMap["untitled:9"] = {rtwname: "<Root>/Divide"};
	this.rtwnameHashMap["<Root>/Fcn"] = {sid: "untitled:11"};
	this.sidHashMap["untitled:11"] = {rtwname: "<Root>/Fcn"};
	this.rtwnameHashMap["<Root>/Gain"] = {sid: "untitled:6"};
	this.sidHashMap["untitled:6"] = {rtwname: "<Root>/Gain"};
	this.rtwnameHashMap["<Root>/Gain1"] = {sid: "untitled:12"};
	this.sidHashMap["untitled:12"] = {rtwname: "<Root>/Gain1"};
	this.rtwnameHashMap["<Root>/I2C Read"] = {sid: "untitled:2"};
	this.sidHashMap["untitled:2"] = {rtwname: "<Root>/I2C Read"};
	this.rtwnameHashMap["<Root>/I2C Write"] = {sid: "untitled:1"};
	this.sidHashMap["untitled:1"] = {rtwname: "<Root>/I2C Write"};
	this.rtwnameHashMap["<Root>/Transfer Fcn First Order"] = {sid: "untitled:7"};
	this.sidHashMap["untitled:7"] = {rtwname: "<Root>/Transfer Fcn First Order"};
	this.rtwnameHashMap["<S1>/U"] = {sid: "untitled:7:1"};
	this.sidHashMap["untitled:7:1"] = {rtwname: "<S1>/U"};
	this.rtwnameHashMap["<S1>/Data Type Duplicate"] = {sid: "untitled:7:2"};
	this.sidHashMap["untitled:7:2"] = {rtwname: "<S1>/Data Type Duplicate"};
	this.rtwnameHashMap["<S1>/Diff"] = {sid: "untitled:7:3"};
	this.sidHashMap["untitled:7:3"] = {rtwname: "<S1>/Diff"};
	this.rtwnameHashMap["<S1>/Gain"] = {sid: "untitled:7:4"};
	this.sidHashMap["untitled:7:4"] = {rtwname: "<S1>/Gain"};
	this.rtwnameHashMap["<S1>/Sum"] = {sid: "untitled:7:5"};
	this.sidHashMap["untitled:7:5"] = {rtwname: "<S1>/Sum"};
	this.rtwnameHashMap["<S1>/UD"] = {sid: "untitled:7:6"};
	this.sidHashMap["untitled:7:6"] = {rtwname: "<S1>/UD"};
	this.rtwnameHashMap["<S1>/Y"] = {sid: "untitled:7:7"};
	this.sidHashMap["untitled:7:7"] = {rtwname: "<S1>/Y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
